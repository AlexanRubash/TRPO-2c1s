Для хранения упорядоченных коллекций существует особая структура данных, которая называется массив, Array.

Объявление
Существует два варианта синтаксиса для создания пустого массива:
let arr = new Array();
let arr = [];

Практически всегда используется второй вариант синтаксиса. В скобках можно указать начальные значения элементов:
let fruits = ["Яблоко", "Апельсин", "Слива"];

- pop – удаляет последний элемент из массива и возвращает его
- push – добавляет элемент в конец массива
- shift – удаляет из массива первый элемент и возвращает его
- unshift – добавляет элемент в начало массива

Массивы могут содержать элементы, которые тоже являются массивами. Это можно использовать для создания многомерных массивов, например, для хранения матриц:
let matrix = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9]
];

alert( matrix[1][1] ); // 5, центральный элемент

Метод toString
Массивы по-своему реализуют метод toString, который возвращает список элементов, разделённых запятыми. Например:
let arr = [1, 2, 3];
alert( arr ); // 1,2,3
alert( String(arr) === '1,2,3' ); // true

--------------------------------------------Методы массивов----------------
 let arr = ["Я", "изучаю", "JavaScript"];
arr.splice(1, 1); // начиная с позиции 1, удалить 1 элемент
alert( arr ); // осталось ["Я", "JavaScript"]
Начиная с позиции 1, метод удалил 1 элемент.
Удалим 3 элемента и заменим их двумя другими:
let arr = ["Я", "изучаю", "JavaScript", "прямо", "сейчас"];
arr.splice(0, 3, "Давай", "танцевать");
alert( arr ) // теперь ["Давай", "танцевать", "прямо", "сейчас"]

-------------------slice---

let arr = ["t", "e", "s", "t"];
alert( arr.slice(1, 3) ); // e,s 
alert( arr.slice(-2) ); // s,t 

slice-удаляет от start до end не считая самого end

--------------------------------

Например, этот код выведет на экран каждый элемент массива:
["Bilbo", "Gandalf", "Nazgul"].forEach(alert);



                  
